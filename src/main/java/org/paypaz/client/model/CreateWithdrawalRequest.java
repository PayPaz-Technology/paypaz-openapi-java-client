/*
 * paypaz-openapi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.paypaz.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * 创建提币请求DTO
 */
@ApiModel(description = "创建提币请求DTO")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-09-19T13:54:26.026896+08:00[Asia/Shanghai]")
public class CreateWithdrawalRequest {
    public static final String SERIALIZED_NAME_SUB_UID = "subUid";
    @SerializedName(SERIALIZED_NAME_SUB_UID)
    private String subUid;

    public static final String SERIALIZED_NAME_TOKEN_ID = "tokenId";
    @SerializedName(SERIALIZED_NAME_TOKEN_ID)
    private String tokenId;

    public static final String SERIALIZED_NAME_ADDRESS = "address";
    @SerializedName(SERIALIZED_NAME_ADDRESS)
    private String address;

    public static final String SERIALIZED_NAME_AMOUNT = "amount";
    @SerializedName(SERIALIZED_NAME_AMOUNT)
    private String amount;

    public static final String SERIALIZED_NAME_CLIENT_WITHDRAWAL_ID = "clientWithdrawalId";
    @SerializedName(SERIALIZED_NAME_CLIENT_WITHDRAWAL_ID)
    private String clientWithdrawalId;

    public static final String SERIALIZED_NAME_TWO_FACTOR_AUTHENTICATION = "twoFactorAuthentication";
    @SerializedName(SERIALIZED_NAME_TWO_FACTOR_AUTHENTICATION)
    private Boolean twoFactorAuthentication;


    public CreateWithdrawalRequest subUid(String subUid) {

        this.subUid = subUid;
        return this;
    }

    /**
     * 子用户ID
     * @return subUid
     **/
    @ApiModelProperty(required = true, value = "子用户ID")

    public String getSubUid() {
        return subUid;
    }


    public void setSubUid(String subUid) {
        this.subUid = subUid;
    }


    public CreateWithdrawalRequest tokenId(String tokenId) {

        this.tokenId = tokenId;
        return this;
    }

    /**
     * 币种ID
     * @return tokenId
     **/
    @ApiModelProperty(required = true, value = "币种ID")

    public String getTokenId() {
        return tokenId;
    }


    public void setTokenId(String tokenId) {
        this.tokenId = tokenId;
    }


    public CreateWithdrawalRequest address(String address) {

        this.address = address;
        return this;
    }

    /**
     * 提币地址
     * @return address
     **/
    @ApiModelProperty(required = true, value = "提币地址")

    public String getAddress() {
        return address;
    }


    public void setAddress(String address) {
        this.address = address;
    }


    public CreateWithdrawalRequest amount(String amount) {

        this.amount = amount;
        return this;
    }

    /**
     * 提币数量
     * @return amount
     **/
    @ApiModelProperty(required = true, value = "提币数量")

    public String getAmount() {
        return amount;
    }


    public void setAmount(String amount) {
        this.amount = amount;
    }


    public CreateWithdrawalRequest clientWithdrawalId(String clientWithdrawalId) {

        this.clientWithdrawalId = clientWithdrawalId;
        return this;
    }

    /**
     * 客户端订单ID（用于幂等性控制）
     * @return clientWithdrawalId
     **/
    @ApiModelProperty(required = true, value = "客户端订单ID（用于幂等性控制）")

    public String getClientWithdrawalId() {
        return clientWithdrawalId;
    }


    public void setClientWithdrawalId(String clientWithdrawalId) {
        this.clientWithdrawalId = clientWithdrawalId;
    }


    public CreateWithdrawalRequest twoFactorAuthentication(Boolean twoFactorAuthentication) {

        this.twoFactorAuthentication = twoFactorAuthentication;
        return this;
    }

    /**
     * Two-factor authentication (2FA) confirmed
     * @return twoFactorAuthentication
     **/
    @ApiModelProperty(required = true, value = "Two-factor authentication (2FA) confirmed ")

    public Boolean getTwoFactorAuthentication() {
        return twoFactorAuthentication;
    }


    public void setTwoFactorAuthentication(Boolean twoFactorAuthentication) {
        this.twoFactorAuthentication = twoFactorAuthentication;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CreateWithdrawalRequest createWithdrawalRequest = (CreateWithdrawalRequest) o;
        return Objects.equals(this.subUid, createWithdrawalRequest.subUid) &&
                Objects.equals(this.tokenId, createWithdrawalRequest.tokenId) &&
                Objects.equals(this.address, createWithdrawalRequest.address) &&
                Objects.equals(this.amount, createWithdrawalRequest.amount) &&
                Objects.equals(this.clientWithdrawalId, createWithdrawalRequest.clientWithdrawalId) &&
                Objects.equals(this.twoFactorAuthentication, createWithdrawalRequest.twoFactorAuthentication);
    }

    @Override
    public int hashCode() {
        return Objects.hash(subUid, tokenId, address, amount, clientWithdrawalId, twoFactorAuthentication);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class CreateWithdrawalRequest {\n");
        sb.append("    subUid: ").append(toIndentedString(subUid)).append("\n");
        sb.append("    tokenId: ").append(toIndentedString(tokenId)).append("\n");
        sb.append("    address: ").append(toIndentedString(address)).append("\n");
        sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
        sb.append("    clientWithdrawalId: ").append(toIndentedString(clientWithdrawalId)).append("\n");
        sb.append("    twoFactorAuthentication: ").append(toIndentedString(twoFactorAuthentication)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

