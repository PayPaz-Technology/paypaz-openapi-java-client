/*
 * paypaz-openapi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.paypaz.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * 创建提币请求DTO
 */
@ApiModel(description = "创建提币请求DTO")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-10-13T11:09:51.307434+08:00[Asia/Shanghai]")
public class CreateWithdrawalRequest {
  public static final String SERIALIZED_NAME_CLIENT_SUB_USER_ID = "clientSubUserId";
  @SerializedName(SERIALIZED_NAME_CLIENT_SUB_USER_ID)
  private String clientSubUserId;

  public static final String SERIALIZED_NAME_TOKEN_ID = "tokenId";
  @SerializedName(SERIALIZED_NAME_TOKEN_ID)
  private String tokenId;

  public static final String SERIALIZED_NAME_ADDRESS = "address";
  @SerializedName(SERIALIZED_NAME_ADDRESS)
  private String address;

  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private String amount;

  public static final String SERIALIZED_NAME_CLIENT_WITHDRAWAL_ID = "clientWithdrawalId";
  @SerializedName(SERIALIZED_NAME_CLIENT_WITHDRAWAL_ID)
  private String clientWithdrawalId;

  public static final String SERIALIZED_NAME_TWO_FACTOR_AUTHENTICATION = "twoFactorAuthentication";
  @SerializedName(SERIALIZED_NAME_TWO_FACTOR_AUTHENTICATION)
  private Boolean twoFactorAuthentication;


  public CreateWithdrawalRequest clientSubUserId(String clientSubUserId) {
    
    this.clientSubUserId = clientSubUserId;
    return this;
  }

   /**
   * 客户子用户唯一标识
   * @return clientSubUserId
  **/
  @NotNull
 @Size(min=1,max=64)  @ApiModelProperty(required = true, value = "客户子用户唯一标识")

  public String getClientSubUserId() {
    return clientSubUserId;
  }


  public void setClientSubUserId(String clientSubUserId) {
    this.clientSubUserId = clientSubUserId;
  }


  public CreateWithdrawalRequest tokenId(String tokenId) {
    
    this.tokenId = tokenId;
    return this;
  }

   /**
   * 币种ID
   * @return tokenId
  **/
  @NotNull
  @ApiModelProperty(required = true, value = "币种ID")

  public String getTokenId() {
    return tokenId;
  }


  public void setTokenId(String tokenId) {
    this.tokenId = tokenId;
  }


  public CreateWithdrawalRequest address(String address) {
    
    this.address = address;
    return this;
  }

   /**
   * 提币地址
   * @return address
  **/
  @NotNull
  @ApiModelProperty(required = true, value = "提币地址")

  public String getAddress() {
    return address;
  }


  public void setAddress(String address) {
    this.address = address;
  }


  public CreateWithdrawalRequest amount(String amount) {
    
    this.amount = amount;
    return this;
  }

   /**
   * 提币数量
   * @return amount
  **/
  @NotNull
  @ApiModelProperty(required = true, value = "提币数量")

  public String getAmount() {
    return amount;
  }


  public void setAmount(String amount) {
    this.amount = amount;
  }


  public CreateWithdrawalRequest clientWithdrawalId(String clientWithdrawalId) {
    
    this.clientWithdrawalId = clientWithdrawalId;
    return this;
  }

   /**
   * 客户端订单ID（用于幂等性控制）
   * @return clientWithdrawalId
  **/
  @NotNull
 @Size(min=16,max=64)  @ApiModelProperty(required = true, value = "客户端订单ID（用于幂等性控制）")

  public String getClientWithdrawalId() {
    return clientWithdrawalId;
  }


  public void setClientWithdrawalId(String clientWithdrawalId) {
    this.clientWithdrawalId = clientWithdrawalId;
  }


  public CreateWithdrawalRequest twoFactorAuthentication(Boolean twoFactorAuthentication) {
    
    this.twoFactorAuthentication = twoFactorAuthentication;
    return this;
  }

   /**
   * Two-factor authentication (2FA) confirmed 
   * @return twoFactorAuthentication
  **/
  @NotNull
  @ApiModelProperty(required = true, value = "Two-factor authentication (2FA) confirmed ")

  public Boolean getTwoFactorAuthentication() {
    return twoFactorAuthentication;
  }


  public void setTwoFactorAuthentication(Boolean twoFactorAuthentication) {
    this.twoFactorAuthentication = twoFactorAuthentication;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateWithdrawalRequest createWithdrawalRequest = (CreateWithdrawalRequest) o;
    return Objects.equals(this.clientSubUserId, createWithdrawalRequest.clientSubUserId) &&
        Objects.equals(this.tokenId, createWithdrawalRequest.tokenId) &&
        Objects.equals(this.address, createWithdrawalRequest.address) &&
        Objects.equals(this.amount, createWithdrawalRequest.amount) &&
        Objects.equals(this.clientWithdrawalId, createWithdrawalRequest.clientWithdrawalId) &&
        Objects.equals(this.twoFactorAuthentication, createWithdrawalRequest.twoFactorAuthentication);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientSubUserId, tokenId, address, amount, clientWithdrawalId, twoFactorAuthentication);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateWithdrawalRequest {\n");
    sb.append("    clientSubUserId: ").append(toIndentedString(clientSubUserId)).append("\n");
    sb.append("    tokenId: ").append(toIndentedString(tokenId)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    clientWithdrawalId: ").append(toIndentedString(clientWithdrawalId)).append("\n");
    sb.append("    twoFactorAuthentication: ").append(toIndentedString(twoFactorAuthentication)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

